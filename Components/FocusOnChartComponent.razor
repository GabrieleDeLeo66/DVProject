@using MudBlazor
@using Syncfusion.Blazor.LinearGauge
<script type="text/javascript" src="https://d3js.org/d3.v4.js"></script>
<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
<script src="https://d3js.org/d3-geo-projection.v2.min.js"></script>
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/map.js"></script>
<script src="https://cdn.amcharts.com/lib/5/geodata/worldLow.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
@inject IJSRuntime JS

<style>
    #chartdiv {
        width : 100%;
        height : 500px;
        font-size : 11px;
    }
</style>

<script>
	function CreateChart(/*field*/) {
        var root = am5.Root.new("chartdiv");
        var chart = root.container.children.push(
            am5xy.XYChart.new(root, {
                panX: true,
                panY: true
            })
        );

        var yAxis = chart.yAxes.push(
            am5xy.ValueAxis.new(root, {
                renderer: am5xy.AxisRendererY.new(root, {
                })
            })
        );
        var xAxis = chart.xAxes.push(
            am5xy.DateAxis.new(root, {
                baseInterval: { timeUnit: "day", count: 1 },
                min: new Date(2020, 03, 20).getTime(),
                max: new Date(2022, 02, 17).getTime(),
                renderer: am5xy.AxisRendererX.new(root, {
                })
            })
        );
        xAxis.get("dateFormats")["day"] = "dd/MM/yyyy";
        var data = [];

        d3.queue()
            .defer(d3.csv, "/data/owid-covid-data-Europe.csv", function (d) {

                element = {
                    "date": d.date,
                    "location": d.location,
                    "total_cases": d.total_cases,
                    "total_deaths": d.total_deaths,
                    "total_vaccinations": d.total_vaccinations,
                    "total_tests": d.total_tests
                };
                //element[field] = d[i][field];

                if (!data[d.location]) {
                    data[d.location] = [element];
                }
                else {
                    tmp = data[d.location];
                    tmp.push(element);
                    data[d.location] = tmp;
                }
            })
            .await(ready);

        // d3.csv("/data/owid-covid-data-Europe.csv", function (d) {

        //     for (var i = 0; i < d.length; i++) {
        //         element = {
        //             "date": d[i].date,
        //             "location": d[i].location,
        //             "total_cases": d[i].total_cases,
        //             "total_deaths": d[i].total_deaths,
        //             "total_vaccinations": d[i].total_vaccinations,
        //             "total_tests": d[i].total_tests
        //         };
        //         //element[field] = d[i][field];              

        //         if (!data[d[i].location]) {
        //             data[d[i].location] = [element];
        //         }
        //         else {
        //             tmp = data[d[i].location];
        //             tmp.push(element);
        //             data[d[i].location] = tmp;
        //         }
        //     }
        // });
        function ready() {
            console.log(data)

            var locations = Object.keys(data);
            for (var i = 0; i < locations.length; i++) {

                var tot_cases = chart.series.push(
                    am5xy.LineSeries.new(root, {
                        name: "Tot_cases_" + locations[i],
                        xAxis: xAxis,
                        yAxis: yAxis,
                        valueYField: "total_cases",
                        valueXField: "date"
                    })
                );
                tot_cases.data.processor = am5.DataProcessor.new(root, {
                    numericFields: ["total_cases"],
                    dateFields: ["date"],
                    dateFormat: "dd-MM-yyyy"
                });
                tot_cases.data.setAll(data[locations[i]]);
                console.log(tot_cases)
            }
        }

	}
</script>


<div id="chartdiv"></div>